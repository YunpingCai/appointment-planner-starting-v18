{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\appointment-planner-starting-v18\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState();\n  const [appointments, setAppointments] = useState();\n  const addContact = (name, phone, email) => {\n    setContacts([...contacts, {\n      name,\n      phone,\n      email\n    }]);\n  };\n  const addAppointments = (name, contact, date, time) => {\n    setAppointments([...appointments, {\n      name,\n      contact,\n      date,\n      time\n    }]);\n  };\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contacts: contacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointments: appointments,\n        contacts: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1pSdEEMEqCOuKBwYwBmVj9ne3Mg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContact","name","phone","email","addAppointments","contact","date","time","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["D:/Code/appointment-planner-starting-v18/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState();\r\n  const [appointments, setAppointments] = useState();\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts([...contacts, { name, phone, email }]);\r\n  };\r\n\r\n  const addAppointments = (name, contact, date, time) => {\r\n    setAppointments([...appointments, { name, contact, date, time }]);\r\n  }\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route \r\n        path={ROUTES.CONTACTS} \r\n        element={ \r\n          <ContactsPage \r\n            contacts={contacts}\r\n            addContact={addContact} /> /* Add props to ContactsPage */ }/>\r\n      <Route \r\n        path={ROUTES.APPOINTMENTS} \r\n        element={ \r\n          <AppointmentsPage \r\n            appointments={appointments}\r\n            contacts/> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,wBAAwB,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACjH,OAAOC,IAAI,IAAIC,MAAM,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,gDAAgD;AACjF,SAASC,YAAY,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,EAAE;EAC1C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,EAAE;EAElD,MAAMkB,UAAU,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACzCN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEK,IAAI;MAAEC,KAAK;MAAEC;IAAM,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACH,IAAI,EAAEI,OAAO,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACrDR,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;MAAEG,IAAI;MAAEI,OAAO;MAAEC,IAAI;MAAEC;IAAK,CAAC,CAAC,CAAC;EACnE,CAAC;EACD;AACF;AACA;AACA;;EAEE;AACF;AACA;AACA;;EAEE,MAAMC,MAAM,GAAGxB,mBAAmB,CAACC,wBAAwB,eACzDQ,OAAA,CAACP,KAAK;IAACuB,IAAI,EAAC,GAAG;IAACC,OAAO,eAAGjB,OAAA,CAACL,IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;IAAAC,QAAA,gBACjCtB,OAAA,CAACP,KAAK;MAAC8B,KAAK;MAACN,OAAO,eAAGjB,OAAA,CAACN,QAAQ;QAAC8B,EAAE,EAAE5B,MAAM,CAAC6B,QAAS;QAACC,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACnErB,OAAA,CAACP,KAAK;MACJuB,IAAI,EAAEpB,MAAM,CAAC6B,QAAS;MACtBR,OAAO,eACLjB,OAAA,CAACF,YAAY;QACXK,QAAQ,EAAEA,QAAS;QACnBI,UAAU,EAAEA;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAiC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACpErB,OAAA,CAACP,KAAK;MACJuB,IAAI,EAAEpB,MAAM,CAAC+B,YAAa;MAC1BV,OAAO,eACLjB,OAAA,CAACH,gBAAgB;QACfQ,YAAY,EAAEA,YAAa;QAC3BF,QAAQ;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,CAAC;IAAqC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD,CACT,CAAC;EAEF,oBACErB,OAAA,CAACV,cAAc;IAACyB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAErC;AAACnB,EAAA,CA1CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}